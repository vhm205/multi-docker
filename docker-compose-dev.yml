version: "3"
services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 2005:80
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://nginx.host.com"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    depends_on:
      - client
      - api

  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'fullstack_app']
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: fullstack_app
      POSTGRES_PASSWORD: fullstack_app
      POSTGRES_DB: fullstack_app

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 30s
      retries: 3

  redis_commander:
    image: rediscommander/redis-commander:latest
    container_name: redis_commander
    environment:
      - REDIS_HOSTS=redis:redis:6379
    ports:
      - 8081:8081
    depends_on:
      - redis

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./client:/app
    environment:
      - WDS_SOCKET_PORT=0

  api:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGHOST=postgres
      - PGDATABASE=fullstack_app
      - PGUSER=fullstack_app
      - PGPASSWORD=fullstack_app
      - PGPORT=5432
    depends_on:
      - redis
      - postgres

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis